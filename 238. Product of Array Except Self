# Prefix Sum approach O(n)
class Solution(object):
    def productExceptSelf(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        answer = [1]*len(nums)
        # calculate the prefix product and store it in answer to save space
        prefix = 1
        for i in range(len(nums)):
            answer[i] = prefix
            prefix *= nums[i]
        # calculate the suffix product
        suffix = 1
        for i in range(len(nums)-1, -1, -1):
            answer[i] *= suffix   
            suffix *= nums[i]  
        return answer
        
