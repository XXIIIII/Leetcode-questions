# Recursion O(n)
class Solution(object):
    def hasPathSum(self, root, targetSum):
        """
        :type root: Optional[TreeNode]
        :type targetSum: int
        :rtype: bool
        """
        
        if not root:
            return False # if that node doesn't exist, return False

        if not root.left and not root.right: # if it's a leaf node
            return targetSum - root.val == 0 # if minus the leaf value == 0, means the path satisfied the sum
        
        targetSum -= root.val

        return self.hasPathSum(root.left, targetSum) or self.hasPathSum(root.right, targetSum)
            
        
