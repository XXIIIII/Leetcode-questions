class Solution(object):
    def letterCombinations(self, digits):
        """
        :type digits: str
        :rtype: List[str]
        """
        if not digits:
            return []

        # Mapping from digit to corresponding letters
        phone_map = {
            '2': 'abc', '3': 'def', '4': 'ghi', '5': 'jkl',
            '6': 'mno', '7': 'pqrs', '8': 'tuv', '9': 'wxyz'
        }

        # Start with an initial list containing an empty string
        result = ['']

        # Iterate over each digit
        for digit in digits:
            letters = phone_map[digit]
            new_combinations = []

            # Combine each existing result with each letter
            for combination in result:
                for letter in letters:
                    new_combinations.append(combination + letter)

            # Update result with new combinations
            result = new_combinations

        return result
