# Recursion
class Solution(object):
    def isSymmetric(self, root):
        """
        :type root: Optional[TreeNode]
        :rtype: bool
        """
        def traverse(node1, node2):
            if not node1 and not node2: # both are None
                return True
            if not node1 or not node2: # only one of it is None(if it's both are None already return True)
                return False
            if node1.val != node2.val:
                return False
            return traverse(node1.left, node2.right) and traverse(node1.right, node2.left)       
        if not root:
            return True
        return traverse(root.left, root.right) 
        
